@inherits LayoutComponentBase
@inject ILocalStorageService localStorage
@inject MudThemeProvider _mudthemeprovider
@inject NavigationManager Nav
@inject ISnackbar Snackbar


<MudThemeProvider @ref="@_mudthemeprovider"
                  IsDarkMode="_mudthemeprovider.IsDarkMode" />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   Position="DialogPosition.TopCenter" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Color="Color.Tertiary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Class="ml-1" Style="font-size:25px;">DEYPALAN DENTAL CLINIC</MudText>
        <MudSpacer />
        <MudMenu Label="Menu" Dense="true" Icon="@Icons.Material.Filled.AccountCircle" Color="MudBlazor.Color.Inherit">
            <MudMenuItem Icon="@Icons.Material.Filled.Logout" @onclick="logout">Logout</MudMenuItem>
        </MudMenu>

    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Docked" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<style>
    .logo {
        width: 50px;
    }
</style>

@code {
    private MudTheme _theme = new();
    private string modeIcon => _isDarkMode ? Icons.Outlined.LightMode : Icons.Outlined.DarkMode;
    private bool _isDarkMode;
    private bool _drawerOpen = true;

    public async void logout()
    {
        await localStorage.RemoveItemAsync("token");
        Nav.NavigateTo("/");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string? storedValue = await localStorage.GetItemAsync<string>("IsDarkMode");
            _isDarkMode = storedValue != null ? Convert.ToBoolean(storedValue) : false;
            _mudthemeprovider.IsDarkMode = _isDarkMode;
            StateHasChanged();
        }
    }

    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
        _mudthemeprovider.IsDarkMode = _isDarkMode;
        localStorage.SetItemAsync("IsDarkMode", _isDarkMode.ToString());
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}


@*<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
*@